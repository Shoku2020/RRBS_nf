#!/bin/bash
# NEXTFLOW TASK: 3A_multiqc
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x
NXF_ENTRY=${1:-nxf_main}


nxf_date() {
    local ts=$(date +%s%3N);
    if [[ ${#ts} == 10 ]]; then echo ${ts}000
    elif [[ $ts == *%3N ]]; then echo ${ts/\%3N/000}
    elif [[ $ts == *3N ]]; then echo ${ts/3N/000}
    elif [[ ${#ts} == 13 ]]; then echo $ts
    else echo "Unexpected timestamp value: $ts"; exit 1
    fi
}

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a children
    while read P PP;do
        children[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    kill_all() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${children[$1]:=}; do kill_all $i; done
    }

    kill_all $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

on_exit() {
    exit_status=${nxf_main_ret:=$?}
    printf $exit_status > /Myvolume/fyan0011/GitHub/RRBS_nf/work/70/c139f73e0e5d8e03a40217d24fe029/.exitcode
    set +u
    [[ "$tee1" ]] && kill $tee1 2>/dev/null
    [[ "$tee2" ]] && kill $tee2 2>/dev/null
    [[ "$ctmp" ]] && rm -rf $ctmp || true
    exit $exit_status
}

on_term() {
    set +e
    [[ "$pid" ]] && nxf_kill $pid
}

nxf_launch() {
    /bin/bash -ue /Myvolume/fyan0011/GitHub/RRBS_nf/work/70/c139f73e0e5d8e03a40217d24fe029/.command.sh
}

nxf_stage() {
    true
    # stage input files
    rm -f fastqc/sample_R1_fastqc.html
    rm -f fastqc/sample_R1_fastqc.zip
    rm -f fastqc/sample_R2_fastqc.html
    rm -f fastqc/sample_R2_fastqc.zip
    rm -f fastqc2/sample_R1_val_1.fq_trimmed_fastqc.html
    rm -f fastqc2/sample_R1_val_1.fq_trimmed_fastqc.zip
    rm -f fastqc2/sample_R2_val_2.fq_trimmed_fastqc.html
    rm -f fastqc2/sample_R2_val_2.fq_trimmed_fastqc.zip
    rm -f trim/sample_R1.fq.gz_trimming_report.txt
    rm -f trim/sample_R2.fq.gz_trimming_report.txt
    rm -f bismark_align/input.11
    rm -f bismark_align/sample_R1_val_1.fq_trimmed_bismark_hisat2_PE_report.txt
    rm -f bismark_methylation/input.13
    rm -f bismark_methylation/sample_R1_val_1.fq_trimmed_bismark_hisat2_pe_splitting_report.txt
    rm -f bismark_methylation/input.15
    rm -f bismark_methylation/sample_R1_val_1.fq_trimmed_bismark_hisat2_pe.M-bias.txt
    mkdir -p fastqc && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/b4/c9bf91517fa2ac8a83a12e66d8c734/sample_R1_fastqc.html fastqc/sample_R1_fastqc.html
    mkdir -p fastqc && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/b4/c9bf91517fa2ac8a83a12e66d8c734/sample_R1_fastqc.zip fastqc/sample_R1_fastqc.zip
    mkdir -p fastqc && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/b4/c9bf91517fa2ac8a83a12e66d8c734/sample_R2_fastqc.html fastqc/sample_R2_fastqc.html
    mkdir -p fastqc && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/b4/c9bf91517fa2ac8a83a12e66d8c734/sample_R2_fastqc.zip fastqc/sample_R2_fastqc.zip
    mkdir -p fastqc2 && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/51/77a8df26b23ebcbace28df3d0ab95f/sample_R1_val_1.fq_trimmed_fastqc.html fastqc2/sample_R1_val_1.fq_trimmed_fastqc.html
    mkdir -p fastqc2 && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/51/77a8df26b23ebcbace28df3d0ab95f/sample_R1_val_1.fq_trimmed_fastqc.zip fastqc2/sample_R1_val_1.fq_trimmed_fastqc.zip
    mkdir -p fastqc2 && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/51/77a8df26b23ebcbace28df3d0ab95f/sample_R2_val_2.fq_trimmed_fastqc.html fastqc2/sample_R2_val_2.fq_trimmed_fastqc.html
    mkdir -p fastqc2 && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/51/77a8df26b23ebcbace28df3d0ab95f/sample_R2_val_2.fq_trimmed_fastqc.zip fastqc2/sample_R2_val_2.fq_trimmed_fastqc.zip
    mkdir -p trim && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/6a/d83a2824036c49b3b0c338794e304c/sample_R1.fq.gz_trimming_report.txt trim/sample_R1.fq.gz_trimming_report.txt
    mkdir -p trim && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/6a/d83a2824036c49b3b0c338794e304c/sample_R2.fq.gz_trimming_report.txt trim/sample_R2.fq.gz_trimming_report.txt
    mkdir -p bismark_align && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/tmp/17/9eff07a04a600d9c03d3b90da2b1c3/input.11 bismark_align/input.11
    mkdir -p bismark_align && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/07/18b28ccd8533850c5e9370a03d4bcf/sample_R1_val_1.fq_trimmed_bismark_hisat2_PE_report.txt bismark_align/sample_R1_val_1.fq_trimmed_bismark_hisat2_PE_report.txt
    mkdir -p bismark_methylation && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/tmp/67/938cc22018c428ba04bc86a0b0e4a0/input.13 bismark_methylation/input.13
    mkdir -p bismark_methylation && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/21/20e76627007f43b907a7ad582dc5d3/sample_R1_val_1.fq_trimmed_bismark_hisat2_pe_splitting_report.txt bismark_methylation/sample_R1_val_1.fq_trimmed_bismark_hisat2_pe_splitting_report.txt
    mkdir -p bismark_methylation && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/tmp/a5/b3fbc49abaf17b919599d4cc45205d/input.15 bismark_methylation/input.15
    mkdir -p bismark_methylation && ln -s /Myvolume/fyan0011/GitHub/RRBS_nf/work/21/20e76627007f43b907a7ad582dc5d3/sample_R1_val_1.fq_trimmed_bismark_hisat2_pe.M-bias.txt bismark_methylation/sample_R1_val_1.fq_trimmed_bismark_hisat2_pe.M-bias.txt
}

nxf_unstage() {
    true
    [[ ${nxf_main_ret:=0} != 0 ]] && return
}

nxf_main() {
    trap on_exit EXIT
    trap on_term TERM INT USR1 USR2

    [[ "${NXF_CHDIR:-}" ]] && cd "$NXF_CHDIR"
    NXF_SCRATCH=''
    [[ $NXF_DEBUG > 0 ]] && nxf_env
    touch /Myvolume/fyan0011/GitHub/RRBS_nf/work/70/c139f73e0e5d8e03a40217d24fe029/.command.begin
    set +u
    set -u
    [[ $NXF_SCRATCH ]] && echo "nxf-scratch-dir $HOSTNAME:$NXF_SCRATCH" && cd $NXF_SCRATCH
    nxf_stage

    set +e
    local ctmp=$(set +u; nxf_mktemp /dev/shm 2>/dev/null || nxf_mktemp $TMPDIR)
    local cout=$ctmp/.command.out; mkfifo $cout
    local cerr=$ctmp/.command.err; mkfifo $cerr
    tee .command.out < $cout &
    tee1=$!
    tee .command.err < $cerr >&2 &
    tee2=$!
    ( nxf_launch ) >$cout 2>$cerr &
    pid=$!
    wait $pid || nxf_main_ret=$?
    wait $tee1 $tee2
    nxf_unstage
}

$NXF_ENTRY
